[{"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/index.tsx":"1","/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/List/index.tsx":"2","/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/components/PageTitle/index.tsx":"3","/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/Home/index.tsx":"4","/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/App.tsx":"5","/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/Detail/index.tsx":"6"},{"size":1442,"mtime":1611569166224,"results":"7","hashOfConfig":"8"},{"size":3151,"mtime":1610679712245,"results":"9","hashOfConfig":"8"},{"size":593,"mtime":1610596508257,"results":"10","hashOfConfig":"8"},{"size":825,"mtime":1610607574030,"results":"11","hashOfConfig":"8"},{"size":1059,"mtime":1610681682737,"results":"12","hashOfConfig":"8"},{"size":4181,"mtime":1610608616751,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1s8b33z",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/index.tsx",["30"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { isInIcestark, registerAppEnter, registerAppLeave, getMountNode } from '@ice/stark-app';\nimport { getMountNode } from '@ice/stark-app';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nexport interface IContainerProps { }\nlet containerSetR: any;\nfunction Container(props: IContainerProps) {\n  const [r, setR] = useState(true);\n  useEffect(() => {\n    containerSetR = setR;\n  }, []);\n  if (r) {\n    return (\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  } else {\n    return null;\n  }\n}\n\n// if (isInIcestark()) {\n//   registerAppEnter(() => {\n//     ReactDOM.render(\n//       <Container />,\n//       getMountNode(\"root\")\n//     );\n//   });\n//   registerAppLeave(() => {\n//     ReactDOM.unmountComponentAtNode(getMountNode());\n//   });\n// }\n\nReactDOM.render(<Container />, getMountNode(\"root\"));\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   getMountNode(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["31","32"],"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/List/index.tsx",[],["33","34"],"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/components/PageTitle/index.tsx",[],"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/Home/index.tsx",[],"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/App.tsx",[],"/Users/gaotianyang/homework/icestark-icejs/icestark-waiter/src/routes/Detail/index.tsx",[],["35","36"],{"ruleId":"37","severity":1,"message":"38","line":21,"column":5,"nodeType":"39","messageId":"40","endLine":21,"endColumn":18},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"41","replacedBy":"47"},{"ruleId":"43","replacedBy":"48"},"@typescript-eslint/no-unused-vars","'containerSetR' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],["49"],["50"],"no-global-assign","no-unsafe-negation"]